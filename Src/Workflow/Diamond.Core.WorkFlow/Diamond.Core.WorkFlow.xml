<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Diamond.Core.Workflow</name>
    </assembly>
    <members>
        <member name="T:Diamond.Core.Workflow.ExceptionContextDecorator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.ExceptionContextDecorator.WellKnown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.ExceptionContextDecorator.WellKnown.Context">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.ExceptionContextDecorator.WellKnown.Context.Exception">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.ExceptionContextDecorator.WellKnown.Context.ExitCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.FailureMessage(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.HasException(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.HasExitCode(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.GetException(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.GetExitCode(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.SetException(Diamond.Core.Workflow.IContext,System.Exception)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="ex"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.SetException(Diamond.Core.Workflow.IContext,System.Int32,System.Exception)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="exitCode"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.SetException(Diamond.Core.Workflow.IContext,System.String)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="message"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.SetException(Diamond.Core.Workflow.IContext,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="exitCode"></param>
            <param name="message"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.SetException(Diamond.Core.Workflow.IContext,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.ExceptionContextDecorator.SetException(Diamond.Core.Workflow.IContext,System.Int32,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="exitCode"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.MissingStepsException">
            <summary>
            Generic error for a missing context property.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.MissingStepsException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.NoExceptionException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.NoExceptionException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.NoExitCodeException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.NoExitCodeException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.UnknownFailureException">
            <summary>
            Generic error for a missing context property.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.UnknownFailureException.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="stepName"></param>
            <param name="stepNumber"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowFailureException">
            <summary>
            Generic error for a missing context property.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowFailureException.#ctor(System.Exception,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="innerException"></param>
            <param name="stepName"></param>
            <param name="stepNumber"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowManagerNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowManagerNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="groupName"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemFactory.#ctor(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemFactory.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemFactory})">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemFactory.ServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemFactory.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemFactory.GetItemsAsync(System.String)">
            <summary>
            
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowManagerFactory">
            <summary>
            This is a generic repository factory that can return a repository
            for any given entity interface.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowManagerFactory.#ctor(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowManagerFactory.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowManagerFactory})">
            <summary>
            
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowManagerFactory.ServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowManagerFactory.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowManagerFactory.GetAsync(System.String)">
            <summary>
            
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.LinearCompleteWorkflowManager">
            <summary>
             This workflow manager executes ALL steps in a work flow. If the
             current step indicates it should not be executed it is skipped
             and the work flow moves on to the next step.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearCompleteWorkflowManager.#ctor(Diamond.Core.Workflow.IWorkflowItemFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.LinearCompleteWorkflowManager})">
            <summary>
            
            </summary>
            <param name="workFlowItemFactory"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearCompleteWorkflowManager.#ctor(Diamond.Core.Workflow.IWorkflowItemFactory)">
            <summary>
            
            </summary>
            <param name="workFlowItemFactory"></param>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearCompleteWorkflowManager.WorkflowItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.LinearCompleteWorkflowManager._steps">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearCompleteWorkflowManager.Steps">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearCompleteWorkflowManager.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearCompleteWorkflowManager.Group">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearCompleteWorkflowManager.ExecuteWorkflowAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearCompleteWorkflowManager.LoadAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearCompleteWorkflowManager.ExecuteStepAsync(Diamond.Core.Workflow.IWorkflowItem,Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.LinearHaltWorkflowManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearHaltWorkflowManager.#ctor(Diamond.Core.Workflow.IWorkflowItemFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.LinearHaltWorkflowManager})">
            <summary>
            
            </summary>
            <param name="workFlowItemFactory"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearHaltWorkflowManager.#ctor(Diamond.Core.Workflow.IWorkflowItemFactory)">
            <summary>
            
            </summary>
            <param name="workFlowItemFactory"></param>
        </member>
        <member name="F:Diamond.Core.Workflow.LinearHaltWorkflowManager._steps">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.WorkflowItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.Steps">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.Group">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearHaltWorkflowManager.ExecuteWorkflowAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearHaltWorkflowManager.ExecuteStepAsync(Diamond.Core.Workflow.IWorkflowItem,Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.LinearHaltWorkflowManager.LoadAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.AlwaysExecuteStepIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.HasAlwaysExecuteStep">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.LinearHaltWorkflowManager.FinalStepOfWorkflow">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowContext">
            <summary>
            Defines a generic context that can be used for a workflow. The
            context allows data to be shared between the multiple steps of
            a workflow during execution.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowContext.Name">
            <summary>
            Gets the name of the context. The name is used for logging purposes.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowContext.Arguments">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowContext.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowContext.ResetAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowItem">
            <summary>
            This should not be used. Use <see cref="T:Diamond.Core.Workflow.WorkflowItemTemplate"/> instead.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItem.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate})">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItem.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="name"></param>
            <param name="group"></param>
            <param name="ordinal"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItem.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="name"></param>
            <param name="group"></param>
            <param name="ordinal"></param>
            <param name="alwaysExecute"></param>
        </member>
        <member name="T:Diamond.Core.Workflow.WorkflowItemTemplate">
            <summary>
            This class is the template for a workflow step.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.#ctor">
            <summary>
            Creates a default instance of <see cref="T:Diamond.Core.Workflow.WorkflowItemTemplate"/>.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate})">
            <summary>
            Creates an instance of <see cref="T:Diamond.Core.Workflow.WorkflowItemTemplate"/> with the given logger.
            </summary>
            <param name="logger">An instance of the logger used by this step to create log entries during execution.</param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32)">
            <summary>
            Creates an instance of <see cref="T:Diamond.Core.Workflow.WorkflowItemTemplate"/> with the given logger, name, group and ordinal.
            </summary>
            <param name="logger">An instance of the logger used by this step to create log entries during execution.</param>
            <param name="name">The name of the step.</param>
            <param name="group">The group this step executes in.</param>
            <param name="ordinal">The order in the group this step executes.</param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Diamond.Core.Workflow.WorkflowItemTemplate"/> with the given logger, name, group ordinal and
            value for the <see cref="P:Diamond.Core.Workflow.WorkflowItemTemplate.AlwaysExecute"/> property.
            </summary>
            <param name="logger">An instance of the logger used by this step to create log entries during execution.</param>
            <param name="name">The name of the step.</param>
            <param name="group">The group this step executes in.</param>
            <param name="ordinal">The order in the group this step executes.</param>
            <param name="alwaysExecute">Sets the <see cref="P:Diamond.Core.Workflow.WorkflowItemTemplate.AlwaysExecute"/></param> property.
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemTemplate.Name">
            <summary>
            Gets/sets the name of this workflow item for logging purposes.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemTemplate.Group">
            <summary>
            Gets/sets the group this item belongs to. Items are grouped together
            so that the WorkflowManager can gather the steps into a workable series.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemTemplate.Ordinal">
            <summary>
            The order this item appears in the execution steps.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemTemplate.AlwaysExecute">
            <summary>
            Gets/sets avlue to indicate that this step should always execute. This does not
            override <see cref="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnShouldExecuteAsync(Diamond.Core.Workflow.IContext)"/> and is used
            by some workflow managers but not all.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemTemplate.Weight">
            <summary>
            Gets/sets a weigh used for determining prioirty of this step. This value is used
            by some workflow managers but not all.
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.WorkflowItemTemplate.Logger">
            <summary>
            Gets/sets the instance of the logger used by this 
            step to create log entries during execution.
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.ShouldExecuteAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.ExecuteStepAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            Performs all of the steps of this step's execution including calls
            to <see cref="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnPrepareForExecutionAsync(Diamond.Core.Workflow.IContext)"/>, <see cref="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnShouldExecuteAsync(Diamond.Core.Workflow.IContext)"/>
            and <see cref="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnPostExecutionAsync(Diamond.Core.Workflow.IContext)"/>. This is usually called by the worflow manager.
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnPrepareForExecutionAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            Called prior to <see cref="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnShouldExecuteAsync(Diamond.Core.Workflow.IContext)"/> and <see cref="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnExecuteStepAsync(Diamond.Core.Workflow.IContext)"/>
            to prepare the step for execution.
            </summary>
            <param name="context">The current workflow context.</param>
            <returns>Returns true if prepartion for the step execution was
            successful; false otherwise.</returns>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnShouldExecuteAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            Allows the step to dynamically defer execution based on the context.
            </summary>
            <param name="context">The current workflow context.</param>
            <returns>Returns true if the step should execute, false otherwise.</returns>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnPostExecutionAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            Called after a step has executed to perform any necessary cleanup.
            </summary>
            <param name="context">The current workflow context.</param>
            <returns>Returns true is the post execution actions were successful; false otherwise.</returns>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.OnExecuteStepAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            Performs the actual work fot he step execution. This should be overwritten
            in the concrete class to perform the necessary actions.
            </summary>
            <param name="context">The current workflow context.</param>
            <returns>Returns true if the step executed successfully; false otherwise.</returns>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.StepFailedAsync(Diamond.Core.Workflow.IContext,System.String)">
            <summary>
            Marks a step as failed and provides an error message.
            </summary>
            <param name="context">The current workflow context.</param>
            <param name="message">The mesage that will be logged to the logging system and the workflow context.</param>
        </member>
        <member name="M:Diamond.Core.Workflow.WorkflowItemTemplate.ToString">
            <summary>
            Returns a string representation of this step.
            </summary>
            <returns>Returns a string representation of this step.</returns>
        </member>
        <member name="T:Diamond.Core.Workflow.CreateTemporaryFolderStep">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.CreateTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory)">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.CreateTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate})">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.CreateTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
            <param name="logger"></param>
            <param name="name"></param>
            <param name="group"></param>
            <param name="ordinal"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.CreateTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
            <param name="logger"></param>
            <param name="name"></param>
            <param name="group"></param>
            <param name="ordinal"></param>
            <param name="alwaysExecute"></param>
        </member>
        <member name="P:Diamond.Core.Workflow.CreateTemporaryFolderStep.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.CreateTemporaryFolderStep.TemporaryFolderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.CreateTemporaryFolderStep.OnExecuteStepAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.DeleteTemporaryFolderStep">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.DeleteTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory)">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.DeleteTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate})">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.DeleteTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
            <param name="logger"></param>
            <param name="name"></param>
            <param name="group"></param>
            <param name="ordinal"></param>
        </member>
        <member name="M:Diamond.Core.Workflow.DeleteTemporaryFolderStep.#ctor(Diamond.Core.System.TemporaryFolder.ITemporaryFolderFactory,Microsoft.Extensions.Logging.ILogger{Diamond.Core.Workflow.WorkflowItemTemplate},System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="temporaryFolderFactory"></param>
            <param name="logger"></param>
            <param name="name"></param>
            <param name="group"></param>
            <param name="ordinal"></param>
            <param name="alwaysExecute"></param>
        </member>
        <member name="P:Diamond.Core.Workflow.DeleteTemporaryFolderStep.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.DeleteTemporaryFolderStep.TemporaryFolderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.DeleteTemporaryFolderStep.OnExecuteStepAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.IsErrorStep">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Workflow.IsErrorStep.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Workflow.IsErrorStep.OnExecuteStepAsync(Diamond.Core.Workflow.IContext)">
            <summary>
            
            </summary>
            <param name="context">The current workflow context.</param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Workflow.DiamondWorkflow">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.DiamondWorkflow.WellKnown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context.LastStepSuccess">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context.WorkflowError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context.WorkflowErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context.WorkflowFailed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context.TemporaryFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Workflow.DiamondWorkflow.WellKnown.Context.IStateDictionaryArray">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
