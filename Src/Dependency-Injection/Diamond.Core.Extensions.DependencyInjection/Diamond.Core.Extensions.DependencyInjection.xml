<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Diamond.Core.Extensions.DependencyInjection</name>
    </assembly>
    <members>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.JsonHostBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.JsonHostBuilderExtensions.UseConfiguredServices(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
            <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.JsonHostBuilderExtensions.AddServices(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
            <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.JsonHostBuilderExtensions.AddAliases(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
            <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.JsonHostBuilderExtensions.AddHostedServices(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
            <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining</returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TypeSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TypeSource.Service">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TypeSource.Implemenation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.AliasList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.Set(System.Collections.Generic.IEnumerable{Diamond.Core.Extensions.DependencyInjection.Alias})">
            <summary>
            
            </summary>
            <param name="aliasList"></param>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.FindType(Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfiguration,Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TypeSource)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="typeSource"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.FindType(System.String)">
            <summary>
            
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.ExtractTypeDefinition(Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfiguration,Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TypeSource)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="typeSource"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TransformAlias(Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfiguration,Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TypeSource)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="typeSource"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.TransformAlias(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.ShouldCreate(Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfiguration)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.CreateServiceDescriptor(Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfiguration)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfigurationDecorator.CreateDatabaseDescriptor(Diamond.Core.Extensions.DependencyInjection.DatabaseDescriptorConfiguration)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationExtensions">
            <summary>
            Extension methods for adding <see cref="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationProvider"/>.
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationExtensions.AddServicesConfigurationFolder(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>
            Adds the JSON configuration provider at <paramref name="path"/> to <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/> to add to.</param>
            <param name="path">Path relative to the base path stored in
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties"/> of <paramref name="builder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationExtensions.AddServicesConfigurationFolder(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)">
            <summary>
            Adds the JSON configuration provider at <paramref name="path"/> to <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/> to add to.</param>
            <param name="path">Path relative to the base path stored in
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties"/> of <paramref name="builder"/>.</param>
            <param name="optional">Whether the file is optional.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationExtensions.AddServicesConfigurationFolder(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds the JSON configuration provider at <paramref name="path"/> to <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/> to add to.</param>
            <param name="path">Path relative to the base path stored in
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties"/> of <paramref name="builder"/>.</param>
            <param name="optional">Whether the file is optional.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationExtensions.AddServicesConfigurationFolder(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a JSON configuration source to <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/> to add to.</param>
            <param name="provider">The <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider"/> to use to access the file.</param>
            <param name="path">Path relative to the base path stored in
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties"/> of <paramref name="builder"/>.</param>
            <param name="optional">Whether the file is optional.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.</returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationExtensions.AddServicesConfigurationFolder(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationSource})">
            <summary>
            Adds a JSON configuration source to <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/> to add to.</param>
            <param name="configureSource">Configures the source.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.</returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServicesHostBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesHostBuilderExtensions.ConfigureServicesFolder(Microsoft.Extensions.Hosting.IHostBuilder,System.String)">
            <summary>
            
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
            /// <param name="folderPath"></param>
            <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining</returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.AliasNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.AliasNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DbContextDependencyFactoryNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DbContextDependencyFactoryNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="factoryType"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DbContextNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DbContextNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DependencyNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyNotFoundException.#ctor(System.Type,System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="implementationType"></param>
            <param name="propertyName"></param>
            <param name="dependencyType"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DuplicateAliasException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DuplicateAliasException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.PropertyConversionException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.PropertyConversionException.#ctor(System.Type,System.String,System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="implementationType"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.PropertyIsReadOnlyException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.PropertyIsReadOnlyException.#ctor(System.Type,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="implementationType"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.PropertyIsReadOnlyException.#ctor(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="implementationType"></param>
            <param name="propertyName"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.PropertyNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.PropertyNotFoundException.#ctor(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="implementationType"></param>
            <param name="propertyName"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.Alias.Key">
            <summary>
            Gets or sets the key for the alias.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.Alias.TypeDefinition">
            <summary>
            Gets or sets the type definition for the alias.
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.Alias.ToString">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.Extensions.DependencyInjection.Alias"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DatabaseDescriptorConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DatabaseDescriptorConfiguration.Context">
            <summary>
            Get/sets the DbContext object.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DatabaseDescriptorConfiguration.ConnectionString">
            <summary>
            Gets/sets the connection string for the database.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DatabaseDescriptorConfiguration.CommandTimeout">
            <summary>
            Gets/sets the timeout in seconds for a command.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DatabaseDescriptorConfiguration.Factory">
            <summary>
            Gets/sets the factory used to configured the DbContext.
            </summary>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute">
            <summary>
            Represents an attribute that can be applied to properties or fields to indicate that they are dependencies
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute"/> class.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute.Required">
            <summary>
            Throw an exception if the property type is not in the container.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute.OverrideValue">
            <summary>
            If the property is already set, override the
            value with the container value.
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute.GetDependencyProperties(System.Type)">
            <summary>
            Gets or sets the name of the dependency.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyAttribute.SetDependencyProperties(System.IServiceProvider,System.Collections.Generic.IEnumerable{Diamond.Core.Extensions.DependencyInjection.DependencyInfo},System.Object)">
            <summary>
            Set the dependency properties on the instance using the service provider.
            </summary>
            <param name="serviceProvider"></param>
            <param name="dependencyProperties"></param>
            <param name="instance"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DependencyFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.#ctor(System.Type,Diamond.Core.Extensions.DependencyInjection.ServiceDescriptorConfiguration,System.Collections.Generic.IEnumerable{Diamond.Core.Extensions.DependencyInjection.DependencyInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.Extensions.DependencyInjection.DependencyFactory"/> class.
            </summary>
            <param name="implementationType"></param>
            <param name="configuration"></param>
            <param name="dependencyProperties"></param>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.ImplementationType">
            <summary>
            Gets or sets the type of the implementation.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.Configuration">
            <summary>
            Gets or sets the service descriptor configuration.
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.DependencyProperties">
            <summary>
            Gets or sets the dependency properties that are required for the implementation type.
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.GetInstance(System.IServiceProvider,System.Object[])">
            <summary>
             Creates an instance of the implementation type using the provided service provider and parameters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.AssignProperties(System.Object)">
            <summary>
            Assigns the properties from the configuration to the instance of the implementation type.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DependencyFactory.AssignProperties(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Object)">
            <summary>
            Assigns the properties from the configuration to the instance of the implementation type.
            </summary>
            <param name="properties"></param>
            <param name="implementationType"></param>
            <param name="instance"></param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DependencyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyInfo.PropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DependencyInfo.DependencyAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProvider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProvider.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="P:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProvider.BaseServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProvider.GetService(System.Type)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProvider.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProviderFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProviderFactory.CreateServiceProvider(System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="containerBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProviderFactory.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="containerBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProviderFactory.Microsoft#Extensions#DependencyInjection#IServiceProviderFactory{Microsoft#Extensions#DependencyInjection#IServiceCollection}#CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.DiamondServiceProviderFactory.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.HostBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Diamond.Core.Extensions.DependencyInjection.HostBuilderExtensions._factory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.HostBuilderExtensions.UseDiamondDependencyInterfaceInjection(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            
            </summary>
            <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
            <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining</returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationFileParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationFileParser.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationFileParser.Parse(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="baseIndex"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationProvider.#ctor(Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationSource)">
            <summary>
            Initializes a new instance with the specified source.
            </summary>
            <param name="source">The source settings.</param>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationProvider.Load">
            <summary>
            Load the files from the source folder.
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationProvider.Load(System.IO.Stream)">
            <summary>
            Not currently implemented.
            </summary>
            <param name="stream">The stream used to load the files.</param>
        </member>
        <member name="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Builds the <see cref="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationProvider"/> for this source.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder"/>.</param>
            <returns>A <see cref="T:Diamond.Core.Extensions.DependencyInjection.ServicesConfigurationSource"/></returns>
        </member>
    </members>
</doc>
