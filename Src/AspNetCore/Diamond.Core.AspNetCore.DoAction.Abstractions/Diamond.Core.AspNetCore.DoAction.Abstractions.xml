<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Diamond.Core.AspNetCore.DoAction.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Diamond.Core.AspNetCore.DoAction.DoActionResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.Ok">
            <summary>
            Creates a response with an HTTP Status Code of 200.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.Created">
            <summary>
            Creates a response with an HTTP Status Code of 201.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.NoContent">
            <summary>
            Creates a response with an HTTP Status Code of 204.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.BadRequest(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a response with an HTTP Status Code of 400 (Bad Request).
            </summary>
            <param name="detail">A human-readable explanation specific to this occurrence of the problem.</param>
            <param name="instance">A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.</param>
            <param name="title">A short, human-readable summary of the problem type. It SHOULD NOT change from
            occurrence to occurrence of the problem, except for purposes of localization(e.g.,
            using proactive content negotiation; see[RFC7231], Section 3.4).</param>
            <param name="extensions">Gets the System.Collections.Generic.IDictionary`2 for extension members.
            Problem type definitions MAY extend the problem details object with additional
            members. Extension members appear in the same namespace as other members of a
            problem type.</param>
            <returns>Returns the newly created <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance with the provided details.</returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.NotFound(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a response with an HTTP Status Code of 404 (Not Found).
            </summary>
            <param name="detail">A human-readable explanation specific to this occurrence of the problem.</param>
            <param name="instance">A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.</param>
            <param name="title">A short, human-readable summary of the problem type. It SHOULD NOT change from
            occurrence to occurrence of the problem, except for purposes of localization(e.g.,
            using proactive content negotiation; see[RFC7231], Section 3.4).</param>
            <param name="extensions">Gets the System.Collections.Generic.IDictionary`2 for extension members.
            Problem type definitions MAY extend the problem details object with additional
            members. Extension members appear in the same namespace as other members of a
            problem type.</param>
            <returns>Returns the newly created <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance with the provided details.</returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.NotImplemented(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a response with an HTTP Status Code of 501 (Not Implemented).
            </summary>
            <param name="detail">A human-readable explanation specific to this occurrence of the problem.</param>
            <param name="instance">A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.</param>
            <param name="title">A short, human-readable summary of the problem type. It SHOULD NOT change from
            occurrence to occurrence of the problem, except for purposes of localization(e.g.,
            using proactive content negotiation; see[RFC7231], Section 3.4).</param>
            <param name="extensions">Gets the System.Collections.Generic.IDictionary`2 for extension members.
            Problem type definitions MAY extend the problem details object with additional
            members. Extension members appear in the same namespace as other members of a
            problem type.</param>
            <returns>Returns the newly created <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance with the provided details.</returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.PayloadTooLarge(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a response with an HTTP Status Code of 413 (Payload Too Large).
            </summary>
            <param name="detail">A human-readable explanation specific to this occurrence of the problem.</param>
            <param name="instance">A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.</param>
            <param name="title">A short, human-readable summary of the problem type. It SHOULD NOT change from
            occurrence to occurrence of the problem, except for purposes of localization(e.g.,
            using proactive content negotiation; see[RFC7231], Section 3.4).</param>
            <param name="extensions">Gets the System.Collections.Generic.IDictionary`2 for extension members.
            Problem type definitions MAY extend the problem details object with additional
            members. Extension members appear in the same namespace as other members of a
            problem type.</param>
            <returns>Returns the newly created <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance with the provided details.</returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.InternalServerError(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a response with an HTTP Status Code of 500 (Internal Server Error).
            </summary>
            <param name="detail">A human-readable explanation specific to this occurrence of the problem.</param>
            <param name="instance">A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.</param>
            <param name="title">A short, human-readable summary of the problem type. It SHOULD NOT change from
            occurrence to occurrence of the problem, except for purposes of localization(e.g.,
            using proactive content negotiation; see[RFC7231], Section 3.4).</param>
            <param name="extensions">Gets the System.Collections.Generic.IDictionary`2 for extension members.
            Problem type definitions MAY extend the problem details object with additional
            members. Extension members appear in the same namespace as other members of a
            problem type.</param>
            <returns>Returns the newly created <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance with the provided details.</returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DoActionResult.FromStatusCode(System.Int32,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="statusCode"></param>
            <param name="detail"></param>
            <param name="instance"></param>
            <param name="title"></param>
            <param name="type"></param>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException">
            <summary>
            This is an abstract class the defines the base object for all
            exceptions in the Diamond.Core.AspNetCore.DoAction library. This allows exceptions
            specific to this library to be caught separately than other exceptions.
            </summary>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException"/> class.
            </summary>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException"/> class with a specified error
            message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Diamond.Core.AspNetCore.DoAction.DiamondDoActionException"/> class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information
            about the source or destination.</param>
        </member>
        <member name="T:Diamond.Core.AspNetCore.DoAction.IControllerActionResult`1">
            <summary>
            Contains the result of a controller action.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="P:Diamond.Core.AspNetCore.DoAction.IControllerActionResult`1.ResultDetails">
            <summary>
            The instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> that is returned to the caller
            if the result is not 2xx.
            </summary>
        </member>
        <member name="P:Diamond.Core.AspNetCore.DoAction.IControllerActionResult`1.Result">
            <summary>
            The resulting object instance if the action was successful.
            </summary>
        </member>
        <member name="T:Diamond.Core.AspNetCore.DoAction.IDoAction">
            <summary>
            Defines a generic decorator.
            </summary>
        </member>
        <member name="P:Diamond.Core.AspNetCore.DoAction.IDoAction.ActionKey">
            <summary>
            Gets/sets the unique name for this action.
            </summary>
        </member>
        <member name="T:Diamond.Core.AspNetCore.DoAction.IDoAction`2">
            <summary>
            Defines a decorator that can has wraps TItem and
            returns TResult.
            </summary>
            <typeparam name="TInputs">The instance type being decorated.</typeparam>
            <typeparam name="TResult">The result of the decorator TakeActionAsync method.</typeparam>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.IDoAction`2.ValidateModel(`0)">
            <summary>
            Performs a validation of the action inputs prior to the execution. If the methods returns false, the
            string will contain a list of error messages.
            </summary>
            <param name="item">The inputs passed to the controller method.</param>
            <returns>Returns true if the model was validated successfully, and false otherwise. The string type will
            contain one or more error messages concatenated in a single string.</returns>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.IDoAction`2.ExecuteActionAsync(`0)">
            <summary>
            Executes the controller method action returning the result or an error with an HTTP status code. The default
            implementation calls the OnExecuteActionAsync() method.
            </summary>
            <param name="item">The inputs passed to the controller method. To support multiple
            parameters use a Tuple.</param>
            <returns>A <see cref="T:Diamond.Core.AspNetCore.DoAction.IControllerActionResult`1"/> instance that contains the desired
            result with an HTTP status of 2xx or an error and the appropriate HTTP error status code.</returns>
        </member>
        <member name="T:Diamond.Core.AspNetCore.DoAction.IDoActionFactory">
            <summary>
            Defines a factory to create/retrieve decorator instances.
            </summary>
        </member>
        <member name="M:Diamond.Core.AspNetCore.DoAction.IDoActionFactory.GetAsync``2(System.String)">
            <summary>
            Gets the specific action by type and action key.
            </summary>
            <typeparam name="TInputs">The inputs required for the action handler.</typeparam>
            <typeparam name="TResult">The type of the result returned by the action.</typeparam>
            <param name="actionKey">The unique name of the action.</param>
            <returns>The result of the action.</returns>
        </member>
    </members>
</doc>
